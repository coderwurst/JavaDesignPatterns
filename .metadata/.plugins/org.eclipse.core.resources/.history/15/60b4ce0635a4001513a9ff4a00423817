package com.coderwurst.prototype_patterns;

import com.coderwurst.design_patterns.BoxVan;
import com.coderwurst.design_patterns.Coupe;
import com.coderwurst.design_patterns.Pickup;
import com.coderwurst.design_patterns.Saloon;
import com.coderwurst.design_patterns.Sport;
import com.coderwurst.design_patterns.StandardEngine;

public class VehicleManager {
	
	private Vehicle saloon, coupe, sport, boxVan, pickup;
	
	public VehicleManager() {
		// for simplicity, all vehicles will get the same engine
		saloon = (Vehicle) new Saloon(new StandardEngine(1300));
		coupe = (Vehicle) new Coupe(new StandardEngine(1300));
		sport = (Vehicle) new Sport(new StandardEngine(1300));
		boxVan = (Vehicle) new BoxVan(new StandardEngine(1300));
		pickup = (Vehicle) new Pickup(new StandardEngine(1300));
	}
	
	public Vehicle createSaloon() {
		return (Vehicle) saloon.clone();
	}
	
	public Vehicle createCoupe() {
		return (Vehicle) coupe.clone();
	}
	
	public Vehicle createSport() {
		return (Vehicle) sport.clone();
	}
	
	public Vehicle createBoxVan() {
		return (Vehicle) boxVan.clone();
	}
	
	public Vehicle createPickup() {
		return (Vehicle) pickup.clone();
	}

}
